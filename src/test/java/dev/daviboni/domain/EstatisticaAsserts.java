package dev.daviboni.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EstatisticaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstatisticaAllPropertiesEquals(Estatistica expected, Estatistica actual) {
        assertEstatisticaAutoGeneratedPropertiesEquals(expected, actual);
        assertEstatisticaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstatisticaAllUpdatablePropertiesEquals(Estatistica expected, Estatistica actual) {
        assertEstatisticaUpdatableFieldsEquals(expected, actual);
        assertEstatisticaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstatisticaAutoGeneratedPropertiesEquals(Estatistica expected, Estatistica actual) {
        assertThat(expected)
            .as("Verify Estatistica auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstatisticaUpdatableFieldsEquals(Estatistica expected, Estatistica actual) {
        assertThat(expected)
            .as("Verify Estatistica relevant properties")
            .satisfies(e -> assertThat(e.getPontos()).as("check pontos").isEqualTo(actual.getPontos()))
            .satisfies(e -> assertThat(e.getRebotes()).as("check rebotes").isEqualTo(actual.getRebotes()))
            .satisfies(e -> assertThat(e.getAssistencias()).as("check assistencias").isEqualTo(actual.getAssistencias()))
            .satisfies(e -> assertThat(e.getFaltas()).as("check faltas").isEqualTo(actual.getFaltas()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstatisticaUpdatableRelationshipsEquals(Estatistica expected, Estatistica actual) {
        assertThat(expected)
            .as("Verify Estatistica relationships")
            .satisfies(e -> assertThat(e.getJogador()).as("check jogador").isEqualTo(actual.getJogador()))
            .satisfies(e -> assertThat(e.getPartida()).as("check partida").isEqualTo(actual.getPartida()));
    }
}
